version: '2.1'

services:
  message-broker-service:
    container_name: message-broker-service
    build:
      context: ./rabbitmq
      dockerfile: Dockerfile
    ports:
      - "5675:5672"  # we forward this port because it's useful for debugging
      - "15675:15672"  # here, we can access rabbitmq management plugin
    volumes:
      - rabbitmq-data:/data/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - RABBITMQ_DEFAULT_VHOST=flask_base_dev

  redis-db:
    container_name: redis-db
    build:
      context: ./redis
      dockerfile: Dockerfile
    ports:
      - 6375:6379
    volumes:
      - redis-data:/data/redis

  flask-base-db:
    container_name: flask-base-db
    build:
      context: ../flask-base-api/db
      dockerfile: Dockerfile
    ports:
      - 5435:5432  # expose ports - HOST:CONTAINER
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data:/data/postgres
    healthcheck:
      test: exit 0

  flask-base-service:
    container_name: flask-base-service
    build:
      context: ../flask-base-api
      dockerfile: Dockerfile
    volumes:
      - '../flask-base-api:/usr/src/app'
    ports:
      - 5001:5000 # expose ports - HOST:CONTAINER
    environment:
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@flask-base-db:5432/flask_base_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@flask-base-db:5432/flask_base_test
      - CELERY_BROKER_URL=amqp://rabbitmq:rabbitmq@message-broker-service:5672/flask_base_dev
      - CELERY_BROKER_TEST_URL=amqp://rabbitmq:rabbitmq@message-broker-service:5672/flask_base_test
      #- CELERY_RESULT_BACKEND=redis://redis:redis@redis-db:6379
      - SECRET_KEY=${SECRET_KEY}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_FROM_NUMBER=${TWILIO_FROM_NUMBER}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_DEFAULT_SENDER=${MAIL_DEFAULT_SENDER}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_USE_TLS=${MAIL_USE_TLS}
      - MAIL_USE_SSL=${MAIL_USE_SSL}
      - FCM_SERVER_KEY=${FCM_SERVER_KEY}
    depends_on:
      flask-base-db:
        condition: service_healthy
    links:
      - flask-base-db
      - message-broker-service
      - redis-db

  nginx:
    container_name: nginx
    build: ./nginx/
    restart: always
    ports:
      - 80:80
    depends_on:
      flask-base-service:
        condition: service_started
    links:
      - flask-base-service


  celery-worker:
    container_name: celery-worker
    build:
      context: ./../
      dockerfile: flask-base-main/celery/Dockerfile
    links:
      - message-broker-service
      - redis-db
    environment:
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@flask-base-db:5432/flask_base_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@flask-base-db:5432/flask_base_test
      - CELERY_BROKER_URL=amqp://rabbitmq:rabbitmq@message-broker-service:5672/flask_base_dev
      - CELERY_BROKER_TEST_URL=amqp://rabbitmq:rabbitmq@message-broker-service:5672/flask_base_test
      #- CELERY_RESULT_BACKEND=redis://redis:redis@redis-db:6379
      - SECRET_KEY=${SECRET_KEY}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_FROM_NUMBER=${TWILIO_FROM_NUMBER}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_DEFAULT_SENDER=${MAIL_DEFAULT_SENDER}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_SERVER=${MAIL_SERVER}
      - MAIL_USE_TLS=${MAIL_USE_TLS}
      - MAIL_USE_SSL=${MAIL_USE_SSL}
      - FCM_SERVER_KEY=${FCM_SERVER_KEY}
    depends_on:
      message-broker-service:
        condition: service_started
      redis-db:
        condition: service_started

  swagger:
    container_name: swagger
    build:
      dockerfile: Dockerfile
      context: ../base-swagger
    ports:
      - '8080:8080' # expose ports - HOST:CONTAINER
    environment:
      - SWAGGER_JSON=swagger.yml
    depends_on:
      flask-base-service:
        condition: service_started

    links:
      - flask-base-service

volumes:
  redis-data:
  postgres-data:
  rabbitmq-data:
